[package]
name = "agnostic-lite"
version = "0.5.5"
edition.workspace = true
license.workspace = true
rust-version.workspace = true
repository.workspace = true
homepage.workspace = true
keywords.workspace = true

description = "`agnostic-lite` is an agnostic abstraction layer for any async runtime."
documentation = "https://docs.rs/agnostic-lite"
readme = "README.md"
categories = ["asynchronous", "no-std"]


[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["std"]
alloc = []
std = []
time = [
  "atomic-time",
  "paste",
  "tokio?/time",
  "tokio?/macros",
  "tokio?/sync",
  "wasm?/time",
  "wasm?/channel",
  "smol?/time",
  "smol?/channel",
]

tokio = ["dep:tokio", "std"]

async-io = ["dep:async-io", "time", "std"]
smol = ["dep:smol", "async-io", "std"]

wasm = [
  "std",
  "dep:wasm",
  "wasm/channel",
  "futures-util/async-await-macro",
  "futures-util/async-await",
  "futures-util/std",
]

test = ["time"]

[target.'cfg(target_family = "wasm")'.dependencies]
wasm = { workspace = true, features = ["wasm-bindgen"], optional = true }

[target.'cfg(not(target_family = "wasm"))'.dependencies]
wasm = { workspace = true, optional = true }

[dependencies]
atomic-time = { workspace = true, optional = true }
futures-util = { workspace = true, default-features = false }
pin-project-lite.workspace = true
pin-project = "1"

tokio = { workspace = true, optional = true, default-features = false, features = [
  "rt",
] }

async-io = { workspace = true, optional = true }
smol = { workspace = true, optional = true }
paste = { version = "1", optional = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"

[dev-dependencies]
futures = { version = "0.3", features = ["executor"] }
tokio = { workspace = true, features = ["full"] }
