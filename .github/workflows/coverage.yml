name: coverage

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
      - 'art'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'COPYRIGHT'
      - 'LICENSE*'
      - '**.md'
      - '**.txt'
      - 'art'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  coverage-report:
    name: Generate Coverage for ${{matrix.crate}}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        crate:
          - agnostic
          - agnostic-lite
          - agnostic-net
          - agnostic-dns
          - agnostic-process
    steps:
      - uses: actions/checkout@v4
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run Coverage and Generate Report
        run: |
          mkdir -p coverage/${{ matrix.os }}/${{matrix.crate}}
          cargo tarpaulin --run-types Doctests --run-types Tests --run-types Lib --features tokio,async-std,smol --out xml --output-dir coverage/${{ matrix.os }}/${{matrix.crate}} -j 1
        working-directory: ${{matrix.crate}}
        continue-on-error: true
      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-${{matrix.crate}}
          path: coverage/${{ matrix.os }}/${{matrix.crate}}/cobertura.xml

  upload-codecov:
    needs: coverage-report
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download all coverage reports
        uses: actions/download-artifact@v4
        with:
          path: reports/
      - name: List contents of the reports directory
        run: ls -a reports
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v5
        with:
          directory: reports
          fail_ci_if_error: false
          slug: ${{ github.repository }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  
  update-gist-coverage:
    needs: upload-codecov
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - agnostic
          - agnostic-lite
          - agnostic-net
          - agnostic-dns
          - agnostic-process
    steps:
      - uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get install jq
      - name: Query coverage of ${{matrix.crate}}
        run: |
          sleep 60
          curl --request GET \
            --url 'https://api.codecov.io/api/v2/github/al8n/repos/${{github.repository}}/report/tree?branch=0.6.0&depth=1&path=${{matrix.crate}}' \
            --header 'accept: application/json' \
            --header 'authorization: Bearer ${{ secrets.CODECOV_QUERY_TOKEN }}' | jq '.[0].coverage | {coverage: (. | ceil)}' > ${{matrix.crate}}-coverage.json
      - name: Upload coverage to GitHub Gist
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GIST_PAT}}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('${{ matrix.crate }}-coverage.json', 'utf8');
            const gistId = '327b2a8aef9003246e45c6e47fe63937';
            await github.rest.gists.update({
              gist_id: gistId,
              files: {
                "${{ matrix.crate }}-coverage": {
                  content: output
                }
              }
            });
            console.log("Gist updated");
